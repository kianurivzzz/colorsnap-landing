class LandingI18n {
  constructor() {
    this.currentLanguage = 'ru'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π
    this.translations = {
      ru: {
        // –ù–∞–≤–∏–≥–∞—Ü–∏—è
        download: '–°–∫–∞—á–∞—Ç—å',

        // –ì–µ—Ä–æ–π —Å–µ–∫—Ü–∏—è
        hero_title: '–ü–æ–π–º–∞–π –ª—é–±–æ–π —Ü–≤–µ—Ç',
        hero_title_accent: '–æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º',
        hero_subtitle:
          'Chrome —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –∑–∞—Ö–≤–∞—Ç–∞ —Ü–≤–µ—Ç–æ–≤ —Å –ª—é–±–æ–π –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ü–æ–ª—É—á–∞–π HEX, RGB, HSL –∫–æ–¥—ã –∑–∞ —Å–µ–∫—É–Ω–¥—É!',
        install_free: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ',
        try_demo: '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥–µ–º–æ',
        how_it_works: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç',
        pick_color: '–ü–æ–π–º–∞—Ç—å —Ü–≤–µ—Ç',

        // –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
        features_title: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏',
        feature_instant_title: '–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –∑–∞—Ö–≤–∞—Ç',
        feature_instant_desc:
          '–û–¥–∏–Ω –∫–ª–∏–∫ ‚Äî –∏ –≤—Å–µ —Ñ–æ—Ä–º–∞—Ç—ã —Ü–≤–µ—Ç–∞ –≥–æ—Ç–æ–≤—ã. –ö–ª–∏–∫–Ω–∏ –Ω–∞ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å.',
        feature_formats_title: '–í—Å–µ —Ñ–æ—Ä–º–∞—Ç—ã',
        feature_formats_desc:
          'HEX, RGB, HSL ‚Äî –ø–æ–ª—É—á–∞–π —Ü–≤–µ—Ç –≤ —Ç—Ä–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö —Å—Ä–∞–∑—É.',
        feature_history_title: '–ò—Å—Ç–æ—Ä–∏—è —Ü–≤–µ—Ç–æ–≤',
        feature_history_desc:
          '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–π –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–≤–µ—Ç–∞. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ—Ç–µ—Ä—è–µ—à—å –Ω—É–∂–Ω—ã–π –æ—Ç—Ç–µ–Ω–æ–∫.',
        feature_hotkeys_title: '–ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏',
        feature_hotkeys_desc:
          'Ctrl+Shift+X –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞. –†–∞–±–æ—Ç–∞–π –µ—â—ë –±—ã—Å—Ç—Ä–µ–µ!',
        feature_languages_title: '–î–≤–∞ —è–∑—ã–∫–∞',
        feature_languages_desc:
          '–ü–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–æ–≤ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ.',
        feature_lightweight_title: '–õ–µ–≥–∫–æ–≤–µ—Å–Ω–æ—Å—Ç—å',
        feature_lightweight_desc:
          '–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤. –†–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ –∏ –Ω–µ —Ç–æ—Ä–º–æ–∑–∏—Ç –±—Ä–∞—É–∑–µ—Ä.',

        // –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
        how_it_works_title: '–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç',
        step1_title: '–£—Å—Ç–∞–Ω–æ–≤–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ',
        step1_desc: '–°–∫–∞—á–∞–π ColorSnap –∏–∑ Chrome Web Store –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.',
        step2_title: '–ö–ª–∏–∫–Ω–∏ –Ω–∞ –∏–∫–æ–Ω–∫—É',
        step2_desc:
          '–û—Ç–∫—Ä–æ–π —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏ "–ü–æ–π–º–∞—Ç—å —Ü–≤–µ—Ç" –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π Ctrl+Shift+X.',
        step3_title: '–í—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç',
        step3_desc:
          '–ö–ª–∏–∫–Ω–∏ –ø–æ –ª—é–±–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ‚Äî –ø–æ–ª—É—á–∏ –≤—Å–µ —Ñ–æ—Ä–º–∞—Ç—ã –∏ —Å–∫–æ–ø–∏—Ä—É–π –Ω—É–∂–Ω—ã–π!',

        // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ
        download_title: '–°–∫–∞—á–∞–π ColorSnap –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å',
        download_subtitle:
          '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ, –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏ –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã. –†–∞–±–æ—Ç–∞–µ—Ç –≤ Chrome, Edge, Brave –∏ –¥—Ä—É–≥–∏—Ö Chromium –±—Ä–∞—É–∑–µ—Ä–∞—Ö.',
        download_chrome: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ Chrome Web Store',
        current_version: '–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è',
        free: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
        rating: '–†–µ–π—Ç–∏–Ω–≥',

        // –§—É—Ç–µ—Ä
        footer_description: '–õ—É—á—à–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ —Ü–≤–µ—Ç–æ–≤ –≤ Chrome',
        product: '–ü—Ä–æ–¥—É–∫—Ç',
        features: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏',
        support: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
        privacy_policy: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏',
        contact: '–°–≤—è–∑–∞—Ç—å—Å—è',
        made_with_love: 'Made with ‚ù§Ô∏è for creativity',
        demo_instruction:
          '–ö–ª–∏–∫–Ω–∏ –Ω–∞ –ª—é–±–æ–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —á—Ç–æ–±—ã "–ø–æ–π–º–∞—Ç—å" –µ–≥–æ —Ü–≤–µ—Ç!',
      },
      en: {
        // Navigation
        download: 'Download',

        // Hero section
        hero_title: 'Catch any color',
        hero_title_accent: 'with one click',
        hero_subtitle:
          'Chrome extension for instant color capturing from any web page. Get HEX, RGB, HSL codes in a second!',
        install_free: 'Install for Free',
        try_demo: 'Try Demo',
        how_it_works: 'How It Works',
        pick_color: 'Pick Color',

        // Features
        features_title: 'Features',
        feature_instant_title: 'Instant Capture',
        feature_instant_desc:
          'One click and all color formats are ready. Click on the format you need to copy.',
        feature_formats_title: 'All Formats',
        feature_formats_desc:
          'HEX, RGB, HSL ‚Äî get color in three essential formats instantly.',
        feature_history_title: 'Color History',
        feature_history_desc:
          'Automatically save recent colors. Never lose the perfect shade again.',
        feature_hotkeys_title: 'Hotkeys',
        feature_hotkeys_desc:
          'Ctrl+Shift+X for instant launch. Work even faster!',
        feature_languages_title: 'Two Languages',
        feature_languages_desc:
          'Full support for Russian and English interface.',
        feature_lightweight_title: 'Lightweight',
        feature_lightweight_desc:
          'Minimal resource consumption. Fast performance without slowing your browser.',

        // How it works
        how_it_works_title: 'How It Works',
        step1_title: 'Install Extension',
        step1_desc: 'Download ColorSnap from Chrome Web Store in seconds.',
        step2_title: 'Click the Icon',
        step2_desc:
          'Open the extension and click "Pick Color" or use Ctrl+Shift+X.',
        step3_title: 'Choose Color',
        step3_desc:
          'Click on any element on the page ‚Äî get all formats and copy what you need!',

        // Download
        download_title: 'Download ColorSnap Right Now',
        download_subtitle:
          'Free, secure and ad-free. Works in Chrome, Edge, Brave and other Chromium browsers.',
        download_chrome: 'Install from Chrome Web Store',
        current_version: 'Current Version',
        free: 'Free',
        rating: 'Rating',

        // Footer
        footer_description: 'The best color picker tool for Chrome',
        product: 'Product',
        features: 'Features',
        support: 'Support',
        privacy_policy: 'Privacy Policy',
        contact: 'Contact',
        made_with_love: 'Made with ‚ù§Ô∏è for creativity',
        demo_instruction: 'Click on any page element to "catch" its color!',
      },
    };

    this.loadLanguage();
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –∏–∑ localStorage
  loadLanguage() {
    try {
      const savedLanguage = localStorage.getItem('colorsnap_landing_language');
      this.currentLanguage = savedLanguage || this.detectBrowserLanguage();
    } catch (error) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —è–∑—ã–∫ –∏–∑ localStorage:', error);
      this.currentLanguage = this.detectBrowserLanguage();
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞
  detectBrowserLanguage() {
    const browserLang = navigator.language || navigator.userLanguage;
    if (browserLang.startsWith('ru')) {
      return 'ru';
    }
    return 'en';
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
  setLanguage(language) {
    if (this.translations[language]) {
      this.currentLanguage = language;
      try {
        localStorage.setItem('colorsnap_landing_language', language);
      } catch (error) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —è–∑—ã–∫:', error);
      }
      this.updatePageTexts();
      this.updateLanguageToggle();
      this.updateHtmlLang();
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞
  t(key) {
    const translation = this.translations[this.currentLanguage];
    return translation && translation[key] ? translation[key] : key;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞
  getCurrentLanguage() {
    return this.currentLanguage;
  }

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
  toggleLanguage() {
    const newLanguage = this.currentLanguage === 'ru' ? 'en' : 'ru';
    this.setLanguage(newLanguage);
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —è–∑—ã–∫–∞
  updateLanguageToggle() {
    const toggleBtn = document.getElementById('languageToggle');
    if (toggleBtn) {
      const textElement = toggleBtn.querySelector('.language-toggle__text');
      if (textElement) {
        textElement.textContent = this.currentLanguage === 'ru' ? 'EN' : 'RU';
      }
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ lang –≤ HTML
  updateHtmlLang() {
    document.documentElement.lang = this.currentLanguage;
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  updatePageTexts() {
    // –ù–∞–π—Ç–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º data-i18n –∏ –æ–±–Ω–æ–≤–∏—Ç—å –∏—Ö
    document.querySelectorAll('[data-i18n]').forEach(element => {
      const key = element.getAttribute('data-i18n');
      const translation = this.t(key);

      if (element.hasAttribute('data-i18n-placeholder')) {
        element.placeholder = translation;
      } else if (element.hasAttribute('data-i18n-title')) {
        element.title = translation;
      } else {
        element.textContent = translation;
      }
    });

    // –û–±–Ω–æ–≤–∏—Ç—å title —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    this.updatePageTitle();
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ title —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  updatePageTitle() {
    const titles = {
      ru: 'ColorSnap - –ü–æ–π–º–∞–π –ª—é–±–æ–π —Ü–≤–µ—Ç –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º üé®',
      en: 'ColorSnap - Catch any color with one click üé®',
    };
    document.title = titles[this.currentLanguage];

    // –û–±–Ω–æ–≤–∏—Ç—å meta description
    const descriptions = {
      ru: 'Chrome —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ —Ü–≤–µ—Ç–æ–≤ —Å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü. –ü–æ–ª—É—á–∞–π HEX, RGB, HSL –∫–æ–¥—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ!',
      en: 'Chrome extension for capturing colors from web pages. Get HEX, RGB, HSL codes instantly!',
    };

    const metaDesc = document.querySelector('meta[name="description"]');
    if (metaDesc) {
      metaDesc.setAttribute('content', descriptions[this.currentLanguage]);
    }
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
  init() {
    this.updatePageTexts();
    this.updateLanguageToggle();
    this.updateHtmlLang();

    // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–∞
    const toggleBtn = document.getElementById('languageToggle');
    if (toggleBtn) {
      toggleBtn.addEventListener('click', () => {
        this.toggleLanguage();
      });
    }
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä i18n
window.landingI18n = new LandingI18n();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', () => {
  window.landingI18n.init();
});
